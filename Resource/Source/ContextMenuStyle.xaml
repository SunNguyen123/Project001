<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Resource.AssemblySource"
                    
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ContextMenuASB},ResourceId=mn1}" TargetType="ContextMenu">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:ColorASB.Grey300}}"/>

        <!--<Setter Property="PlacementTarget" Value="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
        <Setter Property="Placement" Value="Bottom"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" 
         BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="Center" Margin="4" VerticalAlignment="Center" Padding="6"
         Background="White"
         Name="br" 
         SnapsToDevicePixels="True"
         CornerRadius="5"
         >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" Direction="0" Opacity="0.7" />
                        </Border.Effect>
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>


                    <ControlTemplate.Triggers>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>  
    </Style>



    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ContextMenuASB},ResourceId=mnitem1}" TargetType="MenuItem">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem"> 
                    <Border x:Name="templateRoot" CornerRadius="5" Background="{TemplateBinding Background}" 
                            Padding="8 4"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                      
                        <Grid VerticalAlignment="Center">
         
    

                            <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="Slide" PlacementTarget="{Binding ElementName=templateRoot}">
                                <Border x:Name="SubMenuBorder" Background="White"  BorderThickness="1" Padding="2">
                                    <ScrollViewer x:Name="SubMenuScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>-->

                        <Trigger Property="IsChecked" Value="true">

                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static local:ColorASB.Grey300}}"/>
                        </Trigger>
                        <!--<Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="blue"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="blue"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static local:ColorASB.Grey200}}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
   
    
    
    
</ResourceDictionary>