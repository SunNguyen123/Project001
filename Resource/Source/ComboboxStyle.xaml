<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Resource.AssemblySource"
                    xmlns:controlnew="clr-namespace:Resource.NewControl"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=tg}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource {x:Static local:ColorASB.Grey100b}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:ColorASB.Grey200}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MaxWidth="24" Width="24"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Margin="16 0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Image x:Name="img" Grid.Column="1" RenderOptions.BitmapScalingMode="HighQuality" Width="16" Height="16" HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" Source="/Resource;component/img/8674526_ic_fluent_chevron_down_regular_icon.png" />


                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static local:ColorASB.Grey200}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static local:ColorASB.Grey300}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" Value="/Resource;component/img/8674511_ic_fluent_chevron_up_regular_icon.png" TargetName="img"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=tgnone}" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource {x:Static local:ColorASB.Grey100b}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:ColorASB.Grey200}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="br" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="{TemplateBinding Background}">

                        <Image x:Name="img" Margin="1"  RenderOptions.BitmapScalingMode="HighQuality" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Source="/Resource;component/img/8674526_ic_fluent_chevron_down_regular_icon.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="br" Value="{DynamicResource {x:Static local:ColorASB.Grey200}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="br" Value="{DynamicResource {x:Static local:ColorASB.Grey300}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" Value="/Resource;component/img/8674511_ic_fluent_chevron_up_regular_icon.png" TargetName="img"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=cmb1}" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="tg" Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=SelectionBoxItem}" IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsDropDownOpen,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource {x:Static local:ComboboxASB.TG}}">
                            
                        </ToggleButton>
                        <Popup StaysOpen="False" AllowsTransparency="True" Focusable="False" PlacementTarget="{Binding ElementName=tg}" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide"  VerticalOffset="12">
                            <Border Background="White" CornerRadius="5" SnapsToDevicePixels="True" BorderThickness="0"  Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActualWidth}"
                                    BorderBrush="{DynamicResource {x:Static local:ColorASB.Grey200}}"
                                    Padding="4"
                                    Margin="4"
                                    >
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="0" Direction="0" Opacity="0.7"/>
                                </Border.Effect>
                                <ItemsPresenter/>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=tgnew}" TargetType="{x:Type controlnew:ToggleButtonNew}">

        <Setter Property="OverridesDefaultStyle" Value="True"/>
      
  
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type controlnew:ToggleButtonNew}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            SnapsToDevicePixels="True"
                            x:Name="br"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>


    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=ComboBoxTextBox}"  TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=cmbitem1}" TargetType="ComboBoxItem">

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 2"/>
        <Setter Property="Padding" Value="16 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            SnapsToDevicePixels="True"
                            x:Name="br"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static local:ColorASB.Grey100b}}" TargetName="br"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static local:ColorASB.Grey300}}" TargetName="br"/>
                        </Trigger>



                    </ControlTemplate.Triggers>
                    
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        
        
    </Style>


    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=ComboBoxEditableTemplate}" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition MaxWidth="20"/>
            </Grid.ColumnDefinitions>

            <ToggleButton x:Name="toggleButton" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                           Grid.Column="1" 
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                          Style="{DynamicResource {x:Static local:ComboboxASB.TGNONE}}"/>
            <Border x:Name="border" Background="{TemplateBinding Background}" Margin="8 0">
                <TextBox x:Name="PART_EditableTextBox" 
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                         Margin="{TemplateBinding Padding}" 
                         Style="{x:Null}"
                         Template="{DynamicResource {x:Static local:ComboboxASB.ComboBoxTextBox}}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <Popup Grid.ColumnSpan="2"  StaysOpen="False" AllowsTransparency="True" Focusable="False" 
                                   PlacementTarget="{Binding ElementName=toggleButton}" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide"  VerticalOffset="12">
                <Border Background="White" CornerRadius="5" SnapsToDevicePixels="True" BorderThickness="0"  Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActualWidth}"
                                    BorderBrush="{DynamicResource {x:Static local:ColorASB.Grey200}}"
                                    Padding="4"
                                    Margin="4"
                                    >
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="4" ShadowDepth="0" Direction="0" Opacity="0.7"/>
                    </Border.Effect>
                    <ItemsPresenter/>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static local:ColorASB.BD700}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ComboboxASB},ResourceId=cmbtext}" TargetType="ComboBox">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static local:FontASB.Regular}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static local:ColorASB.BD700}}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"  Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:ColorASB.Grey500}}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border CornerRadius="5" 
                            UseLayoutRounding="True" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MaxWidth="20"/>
                            </Grid.ColumnDefinitions>
                            <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    --><!--<VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>--><!--
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="contentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                            <ToggleButton Margin="1" Grid.Column="1" x:Name="toggleButton" 
                                          IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsDropDownOpen,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                          Style="{DynamicResource {x:Static local:ComboboxASB.TGNONE}}">

                            </ToggleButton>
                            <ContentPresenter x:Name="contentPresenter"  
                                              VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="8 0"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                  Content="{TemplateBinding SelectionBoxItem}" 
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      />
                            <!--<TextBox  Margin="8 0" VerticalAlignment="Center" 
                                      HorizontalAlignment="Stretch" Style="{x:Null}"
                                      Template="{DynamicResource {x:Static local:ComboboxASB.ComboBoxTextBox}}"
                                      FontFamily="{TemplateBinding FontFamily}" 
                                      Foreground="{TemplateBinding Foreground}" FontSize="12" 
                                      x:Name="PART_EditableTextBox" IsReadOnly="{TemplateBinding IsReadOnly}" 
                                      Grid.Column="0" />-->
                            <Popup Grid.ColumnSpan="2"  StaysOpen="False" AllowsTransparency="True" Focusable="False" 
                                   PlacementTarget="{Binding ElementName=toggleButton}" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide"  VerticalOffset="12">
                                <Border Background="White" CornerRadius="5" SnapsToDevicePixels="True" BorderThickness="0"  Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ActualWidth}"
                                    BorderBrush="{DynamicResource {x:Static local:ColorASB.Grey200}}"
                                    Padding="4"
                                    Margin="4"
                                    >
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="4" ShadowDepth="0" Direction="0" Opacity="0.7"/>
                                    </Border.Effect>
                                    <ItemsPresenter/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
            
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="Template" Value="{DynamicResource {x:Static local:ComboboxASB.ComboBoxEditableTemplate}}"/>
                </Trigger>
          
        </Style.Triggers>
    </Style>




</ResourceDictionary>